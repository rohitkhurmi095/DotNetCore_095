using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

//CLOUDINARY Types
using CloudinaryDotNet.Actions;
//IFormFile
using Microsoft.AspNetCore.Http;

namespace API.Interfaces
{
    //IPhotoService Interface
    //========================
    /*
        -------------
        IMAGE UPLOAD
        -------------
        Photo -> Db (BinaryLargeObject BLOB) - not efficient(more space required)
              -> Folder(File System - Folder on Server) - space issues 
              -> CloudService - cost issues - Cloudinary(10gb Free)
                   |____ NugetPackage: CloudinaryDotnet 1.11.0
            
      (Drag&Drop)
     upload photo
               JWT     (API)  uploads photo
        UI ------------SERVER---------- Cloudinary
        |                                  |
        |             Photo         res    |
         ------------  URL  ---------------
           201 status   | Autogenerated
            |res        (publicId of Photo)
            |
            |___> location of resource in header = user            
                    + object {url,publicId}                  
    */


    //ImageUploadResult = Type from Cloudinary
    //DeletionResult = Type from Cloudinary
    //IFormFile = files for https requests
    //Public Id = image Id from Cloudinary
    public interface IPhotoService
    {
        //UPLOAD PHOTO
        Task<ImageUploadResult> AddPhotoAsync(IFormFile file);

        //DELETE PHOTO
        Task<DeletionResult> DeletePhotoAsync(string publicId);
    
    }
}
